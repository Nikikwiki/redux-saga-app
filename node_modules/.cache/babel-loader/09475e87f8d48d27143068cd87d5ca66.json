{"ast":null,"code":"import { take, takeEvery, takeLatest, takeLeading, select } from \"@redux-saga/core/effects\";\nimport { INCREASE_COUNT, DECREASE_COUNT } from \"../constants\";\n\nconst delay = time => new Promise((resolve, reject) => {\n  setTimeout(resolve, time * 1000);\n});\n\nexport function* workerSaga() {\n  const count = yield select(_ref => {\n    let {\n      counter\n    } = _ref;\n    return counter.count;\n  });\n  yield delay(1);\n  console.log(count);\n}\nexport function* watchClickSaga() {\n  yield takeLeading(INCREASE_COUNT, workerSaga);\n  yield takeLatest(INCREASE_COUNT, workerSaga);\n}\nexport default function* rootSaga() {\n  yield watchClickSaga();\n}","map":{"version":3,"sources":["C:/Users/Nik/Desktop/School/redux-saga/src/redux/sagas/index.js"],"names":["take","takeEvery","takeLatest","takeLeading","select","INCREASE_COUNT","DECREASE_COUNT","delay","time","Promise","resolve","reject","setTimeout","workerSaga","count","counter","console","log","watchClickSaga","rootSaga"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,UAA1B,EAAsCC,WAAtC,EAAmDC,MAAnD,QAAiE,0BAAjE;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,cAA/C;;AAEA,MAAMC,KAAK,GAAIC,IAAD,IAAU,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACrDC,EAAAA,UAAU,CAACF,OAAD,EAAUF,IAAI,GAAG,IAAjB,CAAV;AACH,CAFuB,CAAxB;;AAIA,OAAO,UAAUK,UAAV,GAAuB;AAC1B,QAAMC,KAAK,GAAG,MAAMV,MAAM,CAAC;AAAA,QAAC;AAAEW,MAAAA;AAAF,KAAD;AAAA,WAAiBA,OAAO,CAACD,KAAzB;AAAA,GAAD,CAA1B;AACA,QAAMP,KAAK,CAAC,CAAD,CAAX;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACH;AAED,OAAO,UAAUI,cAAV,GAA2B;AAC9B,QAAMf,WAAW,CAACE,cAAD,EAAiBQ,UAAjB,CAAjB;AACA,QAAMX,UAAU,CAACG,cAAD,EAAiBQ,UAAjB,CAAhB;AACH;AAGD,eAAe,UAAUM,QAAV,GAAqB;AAChC,QAAMD,cAAc,EAApB;AACH","sourcesContent":["import { take, takeEvery, takeLatest, takeLeading, select } from \"@redux-saga/core/effects\"; \r\nimport { INCREASE_COUNT, DECREASE_COUNT } from \"../constants\";\r\n\r\nconst delay = (time) => new Promise((resolve, reject) => {\r\n    setTimeout(resolve, time * 1000);\r\n})\r\n\r\nexport function* workerSaga() {\r\n    const count = yield select(({ counter }) => counter.count);\r\n    yield delay(1);\r\n    console.log(count);\r\n}\r\n\r\nexport function* watchClickSaga() {\r\n    yield takeLeading(INCREASE_COUNT, workerSaga);\r\n    yield takeLatest(INCREASE_COUNT, workerSaga);\r\n}\r\n\r\n\r\nexport default function* rootSaga() {\r\n    yield watchClickSaga();\r\n}"]},"metadata":{},"sourceType":"module"}